@page "/login"
@inject IAuthService AuthService
@inject NavigationManager Nav


<div class="text-center" id="login">
    <h1 class="display-4">Login</h1>
    <br />
    <br />
</div>

<h6 class="text-center" style="color:mediumseagreen;">@MensagemSucesso</h6>
<h6 class="text-center" style="color:tomato">@MensagemErro</h6>

<div class="card cor-site" id="card-login">
    <div class="card-body">
        <h3 class="text-center">Login</h3>
        <EditForm Model="@Usuario" OnValidSubmit="Entrar">

            <div class="form-group">
                <label for="grupo">Login de acesso: *</label>
                <InputText Id="nome" class="form-control" @bind-Value="Usuario.Login" />
                <ValidationMessage For="@(() => Usuario.Login)" />
            </div>

            <div class="form-group">
                <label for="grupo">Senha: *</label>
                <InputText type="password" Id="nome" class="form-control" @bind-Value="Usuario.Senha" />
                <ValidationMessage For="@(() => Usuario.Senha)" />
            </div>
            <br />
            <span aria-hidden="true">
                <button type="submit" class="btn btn-primary">Login</button>

            </span>
        </EditForm>
    </div>
</div>

@if (IsBusy == true)
{
    <div style="width:100%; text-align:center; margin:20px 0">
        <div class="spinner-border" style="width: 2rem; height: 2rem; color:#4a8fa0;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
        <p>carregando. . .</p>
    </div>
}





@code
        {

    public string MensagemErro { get; set; }
    public string MensagemSucesso { get; set; }
    public bool IsBusy { get; set; }

    public Usuario Usuario = new Usuario();
    protected async Task Entrar()
    {
        if (string.IsNullOrEmpty(Usuario.Login) || string.IsNullOrEmpty(Usuario.Senha))
        {
            MensagemErro = "* Campo obrigatório!";
            return;
        }


        IsBusy = true;

        var result = await AuthService.Login(Usuario);
        if (!result.Sucesso)
        {
            MensagemErro = result.Mensagem;
            IsBusy = false;

            return;
        }

        Nav.NavigateTo("/");
        IsBusy = false;
    }
}


