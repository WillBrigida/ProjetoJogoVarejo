@page "/controle"
@inject NavigationManager Nav
@inject HttpClient Http
<NavMenuConfiguracao />

<div class="text-center" id="controles">
    <h1 class="display-4">Controle</h1>
    <br />
</div>

<h6 class="text-center" style="color:mediumseagreen;">@MensagemSucesso</h6>
<h6 class="text-center" style="color:tomato">@MensagemErro</h6>


<div class="card cor-site" id="card-controles">
    <div class="card-body">
        <h3 class="text-center">Fase/Duração</h3>
        <EditForm Model="@controle" OnValidSubmit="OnSalvar">

            <div class="form-group">
                <label for="grupo">Fase: *</label>

                <select @bind="controle.Fase" class="form-control">
                    @foreach (var item in Fases)
                    {
                        <option value="@item">
                            @item
                        </option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="grupo">Duração: *</label>
                <select @bind="@controle.Duracao" class="form-control">
                    @foreach (var item in Dias)
                    {
                        <option value="@item">
                            @item
                        </option>
                    }
                </select>
            </div>
            <br />
            <span aria-hidden="true">
                <button type="submit" class="btn btn-primary">Salvar</button>
            </span>
        </EditForm>
    </div>
</div>

@code{
    public string[] Fases { get; set; } = new string[] { "-Selecione-", "1", "2", "3" };
    public string[] Dias { get; set; } = new string[] { "-Selecione-", "10", "20", "30", "40" };

    public string MensagemErro { get; set; }
    public string MensagemSucesso { get; set; }
    public bool IsBusy { get; set; }
    protected FaseComponent faseComponent;


    public JogoVarejo_Server.Shared.Models.Controle controle = new JogoVarejo_Server.Shared.Models.Controle();

    protected async Task OnSalvar()
    {
        MensagemSucesso = "";
        MensagemErro = "";

        if (controle.ControleId != 0)
        {
            var result = await Http.PutJsonAsync<GenericResult<JogoVarejo_Server.Shared.Models.Controle>>("api/v1/controle/", controle);
            if (result.Sucesso)
                MensagemSucesso = "Dado(s) alterado(s)!";
            else
                MensagemErro = "Não foi possível atender sua requisição!. Tente novamente.";
        }
        else
        {
            var result = await Http.PostJsonAsync<GenericResult<JogoVarejo_Server.Shared.Models.Controle>>("api/v1/controle/", controle);
            if (result.Sucesso)
            {
                MensagemSucesso = "Dado(s) salvo(s)!";
                controle.ControleId = result.obj.ControleId;
            }
            else
                MensagemErro = "Não foi possível atender sua requisição!. Tente novamente.";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await OnCarregarControles();
    }

    protected async Task OnCarregarControles()
    {
        MensagemSucesso = "";
        MensagemErro = "";

        var respose = await Http.GetJsonAsync<GenericResult<JogoVarejo_Server.Shared.Models.Controle>>("api/v1/controle/");
        if (respose.Sucesso)
        {
            controle = respose.obj;
        }
        else
        {
            MensagemErro = respose.Erro;
            controle = new JogoVarejo_Server.Shared.Models.Controle
            {
                Duracao = 0,
                ControleId = 0,
                Fase = 0
            };
        }
    }
}