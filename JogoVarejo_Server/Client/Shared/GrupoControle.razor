@page "/grupocontrole"
@inject HttpClient Http

<AuthorizeView Roles="Admin, Professor">
    <Authorized Context="Auth">
        <NavMenuConfiguracao />

        <div class="text-center" id="grupo-controles">
            <h1 class="display-4">Controle Grupos/Usuarios</h1>
            <br />
        </div>

        <h6 class="text-center" style="color:mediumseagreen;">@MensagemSucesso</h6>
        <h6 class="text-center" style="color:tomato">@MensagemErro</h6>

        @if (grupos == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div id="card-grupo-controles">
                <table class="table table-striped">
                    <thead class="cor-site" style="color:#d7d7d7">
                        <tr>
                            <th>Nome</th>
                            <th>Login</th>
                            <th>Senha</th>
                            <th></th>
                            <th></th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in usuarios)
                        {
                        <tr>
                            <td width="100px">
                                @item.Nome
                            </td>

                            <td width="100px">
                                @item.Login
                            </td>

                            <td>
                                <EditForm Model="usuarios">
                                    <InputText Id="usuarios" class="form-control" @bind-Value="item.Senha" />
                                </EditForm>
                            </td>

                            <td width="60">
                                <button class="btn btn-link" style="color:cornflowerblue;" @onclick="@(()=> OnDelete(item))"><i class="far fa-trash-alt" style="color:tomato"></i></button>
                            </td>

                            <td width="60">
                                <button class="btn btn-link" style="color:mediumseagreen;" @onclick="@(()=> OnSalvar(item))"><i class="far fa-save" style="color:mediumseagreen"></i></button>
                            </td>

                        </tr>
                        }
                    </tbody>
                </table>

            </div>
        }
    </Authorized>
    <NotAuthorized>
        <JogoVarejo_Server.Client.Pages.Index />
    </NotAuthorized>

</AuthorizeView>

@code {
    private List<Grupo> grupos = new List<Grupo>();
    private List<Usuario> usuarios = new List<Usuario>();
    public Grupo Grupo { get; set; } = new Grupo();

    public string MensagemErro { get; set; }
    public string MensagemSucesso { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CarregarItens();
    }

    async Task CarregarItens()
    {
        var users = await Http.GetJsonAsync<List<Usuario>>("api/v1/acesso/usuarios/");
        usuarios = users.OrderBy(x => x.GrupoUsuarioId).ToList();
    }

    async Task OnDelete(Usuario usuario)
    {
        await Http.PostJsonAsync("api/v1/acesso/deletar", usuario);
        await Http.PostJsonAsync("api/v1/grupo/deletar", usuario.Grupo);

        await CarregarItens();
    }

    async Task OnSalvar(Usuario usr)
    {
        var result = await Http.PutJsonAsync<LoginResult>("api/v1/acesso/usuarios", usr);
        if (result.Sucesso)
        {
            MensagemSucesso = "Dado(s) alterado(s)!";
        }
        else
            MensagemErro = result.Mensagem;
    }
}
